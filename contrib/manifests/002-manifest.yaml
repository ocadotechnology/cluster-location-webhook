---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: clusterlocationwebhook
  namespace: clusterlocationwebhook
spec:
  replicas: 2
  selector:
    matchLabels:
      app: cluster-location
  template:
    metadata:
      labels:
        app: cluster-location
        k8s.osp.tech/no-cluster-location: ""
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - cluster-location
            topologyKey: failure-domain.beta.kubernetes.io/zone
      containers:
      - name: cluster-location
        env:
        - name: CLUSTER_LOCATION
          valueFrom:
            configMapKeyRef:
              name: global-environment
              key: cluster-location
        image: ocadotechnology/cluster-location-webhook:does-not-exist
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
            scheme: HTTPS
        resources:
          requests:
            cpu: 10m
            memory: 64Mi
        volumeMounts:
        - name: certs
          mountPath: /certs
      serviceAccountName: clusterlocationwebhook-ca-sync
      volumes:
      - name: certs
        secret:
          secretName: clusterlocationwebhook-tls
---
apiVersion: v1
kind: Service
metadata:
  name: clusterlocationwebhook
  namespace: clusterlocationwebhook
spec:
  selector:
    app: cluster-location
  ports:
  - name: https
    port: 443
    targetPort: http
---
## This file contains a CronJob that runs regularly to automatically update the
## caBundle set on the APIService and ValidatingWebhookConfiguration resource.
## This allows us to store the CA bundle in a Secret resource which is
## generated by jetstack/cert-manager's 'selfsigned' Issuer.
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: clusterlocationwebhook-ca-sync
  namespace: clusterlocationwebhook
  labels:
    app: clusterlocationwebhook
spec:
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: ca-helper
        spec:
          serviceAccountName: clusterlocationwebhook-ca-sync
          restartPolicy: OnFailure
          containers:
          - name: ca-helper
            image: quay.io/munnerz/apiextensions-ca-helper:v0.1.0
            args:
            - -config=/config/config
            volumeMounts:
            - name: config
              mountPath: /config
            resources:
              requests:
                cpu: 10m
                memory: 32Mi
              limits:
                cpu: 100m
                memory: 128Mi
          volumes:
          - name: config
            configMap:
              name: clusterlocationwebhook-ca-sync
  startingDeadlineSeconds: 300
  schedule: "* * * * *"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: clusterlocationwebhook-ca-sync
  namespace: clusterlocationwebhook
  labels:
    app: clusterlocationwebhook
data:
  config: |-
    {
        "mutatingWebhookConfigurations": [
            {
                "name": "clusterlocationwebhook",
                "secret": {
                    "name": "clusterlocationwebhook-ca",
                    "namespace": "clusterlocationwebhook",
                    "key": "tls.crt"
                }
            }
        ]
    }
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: clusterlocationwebhook-ca-sync
  namespace: clusterlocationwebhook
  labels:
    app: clusterlocationwebhook
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  namespace: clusterlocationwebhook
  name: clusterlocationwebhook-ca-sync
  labels:
    app: clusterlocationwebhook
    appId: clusterlocationwebhook
rules:
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
    resourceNames:
    - clusterlocationwebhook-ca
  - apiGroups:
    - admissionregistration.k8s.io
    resources:
    - mutatingwebhookconfigurations
    verbs:
    - get
    - update
    resourceNames:
    - clusterlocationwebhook
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  namespace: clusterlocationwebhook
  name: clusterlocationwebhook-ca-sync
  labels:
    app: clusterlocationwebhook
    appId: clusterlocationwebhook
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clusterlocationwebhook-ca-sync
subjects:
  - name: clusterlocationwebhook-ca-sync
    namespace: clusterlocationwebhook
    kind: ServiceAccount
---
# Create a selfsigned Issuer, in order to create a root CA certificate for
# signing webhook serving certificates
apiVersion: certmanager.k8s.io/v1alpha1
kind: Issuer
metadata:
  name: clusterlocationwebhook-selfsign
  namespace: clusterlocationwebhook
  labels:
    app: clusterlocationwebhook
spec:
  selfsigned: {}
---
# Generate a CA Certificate used to sign certificates for the webhook
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: clusterlocationwebhook-ca
  namespace: clusterlocationwebhook
  labels:
    app: clusterlocationwebhook
spec:
  secretName: clusterlocationwebhook-ca
  issuerRef:
    name: clusterlocationwebhook-selfsign
  commonName: "ca.clusterlocationwebhook.clusterlocationwebhook"
  isCA: true
---
# Create an Issuer that uses the above generated CA certificate to issue certs
apiVersion: certmanager.k8s.io/v1alpha1
kind: Issuer
metadata:
  name: clusterlocationwebhook-ca
  namespace: clusterlocationwebhook
  labels:
    app: clusterlocationwebhook
spec:
  ca:
    secretName: clusterlocationwebhook-ca
---
# Finally, generate a serving certificate for the webhook to use
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: clusterlocationwebhook-tls
  namespace: clusterlocationwebhook
  labels:
    app: clusterlocationwebhook
spec:
  secretName: clusterlocationwebhook-tls
  issuerRef:
    name: clusterlocationwebhook-ca
  dnsNames:
  - clusterlocationwebhook
  - clusterlocationwebhook.clusterlocationwebhook
  - clusterlocationwebhook.clusterlocationwebhook.svc
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: clusterlocationwebhook
  labels:
    app: clusterlocationwebhook
    appId: clusterlocationwebhook
webhooks:
- name: clusterlocationwebhook.k8s.osp.tech
  rules:
  - apiGroups:
    - "*"
    apiVersions:
    - "*"
    operations:
    - CREATE
    - UPDATE
    resources:
    - pods
  failurePolicy: Ignore
  clientConfig:
    service:
      name: clusterlocationwebhook
      namespace: clusterlocationwebhook
      path: /mutate
